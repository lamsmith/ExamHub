@model ExamHub.ViewModel.TakeExamViewModel

@{
    ViewData["Title"] = "Take Exam";
    Layout = null;
}

<head>
    <link rel="stylesheet" href="~/css/TakeExam.css">
</head>
<div class="container mt-5">
    <h1 class="mb-4">@Model.ExamName</h1>

    <div id="countdown"></div>

    <form asp-action="SubmitExam" method="post">
        <input type="hidden" asp-for="@Model.ExamId" value="@Model.ExamId" />
        <input type="hidden" asp-for="@Model.ExamName" value="@Model.ExamName" />

        @for (int i = 0; i < Model.Questions.Count; i++)
        {
            <input type="hidden" asp-for="@Model.Questions[i].QuestionId" value="@Model.Questions[i].QuestionId" />
            <input type="hidden" asp-for="@Model.Questions[i].QuestionText" value="@Model.Questions[i].QuestionText" />

            <div class="mb-3">
                <h4>@Model.Questions[i].QuestionText</h4>
                <div class="form-check">
                    @for (int j = 0; j < Model.Questions[i].Options.Count; j++)
                    {
                        <input type="hidden" asp-for="@Model.Questions[i].Options[j].OptionId" value="@Model.Questions[i].Options[j].OptionId" />
                        <input class="form-check-input" type="radio" asp-for="@Model.Questions[i].SelectedOptionId" value="@Model.Questions[i].Options[j].OptionId" />
                        <label class="form-check-label">
                            @Model.Questions[i].Options[j].OptionText
                        </label>
                    }
                </div>
            </div>
        }

        <button type="submit" class="btn btn-success">Submit Exam</button>
    </form>
</div>

<script>
    function startCountdown(endTime) {
        var countdownElement = document.getElementById("countdown");

        function updateCountdown() {
            var now = new Date().getTime();
            var distance = endTime - now;

            var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
            var seconds = Math.floor((distance % (1000 * 60)) / 1000);

            countdownElement.innerHTML = hours + "h " + minutes + "m " + seconds + "s ";

            if (distance < 0) {
                clearInterval(interval);
                countdownElement.innerHTML = "EXPIRED";
                window.location.href = '@Url.Action("Exams", "Student")';
            }
        }

        var interval = setInterval(updateCountdown, 1000);
    }

    var endTime = new Date('@Model.EndTime.ToString("yyyy-MM-ddTHH:mm:ssZ")').getTime();
    startCountdown(endTime);
</script>
